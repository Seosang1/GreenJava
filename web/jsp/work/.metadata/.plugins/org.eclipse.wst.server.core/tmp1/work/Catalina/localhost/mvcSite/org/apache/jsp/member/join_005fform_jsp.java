/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-06-21 00:53:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import vo.*;

public final class join_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

MemberInfo loginMember = (MemberInfo)session.getAttribute("loginMember");
if (loginMember != null) {

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\talert(\"잘못된 경로로 들어오셨습니다.\");\r\n");
      out.write("\thistory.back();\r\n");
      out.write("</script>\r\n");

	out.close();	// 파일 실행을 강제로 종료시킴
}

request.setCharacterEncoding("utf-8");
Calendar today = Calendar.getInstance();
int year = today.get(Calendar.YEAR);	// 올해 연도
int month = today.get(Calendar.MONTH) + 1;	// 현재 월
int day = today.get(Calendar.DATE);		// 오늘 일

String[] arrDomain = new String[5];
arrDomain[0] = "naver.com";
arrDomain[1] = "nate.com";
arrDomain[2] = "gmail.com";
arrDomain[3] = "daum.net";
arrDomain[4] = "yahoo.com";

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write(".fontBlue { color:blue; font-weight:bold; }\r\n");
      out.write(".fontRed { color:red; font-weight:bold; }\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"../jquery-3.6.0.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("function chkValue(frm) {\r\n");
      out.write("\tvar agree = frm.agree.value;\r\n");
      out.write("\tif (agree == \"n\") {\r\n");
      out.write("\t\talert(\"약관에 동의해야 회원가입이 가능합니다.\");\r\n");
      out.write("\t\tfrm.agree.focus();\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\treturn true;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function setDomain(domain) {\r\n");
      out.write("\tvar e3 = document.frmJoin.e3;\r\n");
      out.write("\tif (domain == \"direct\") {\r\n");
      out.write("\t\te3.value = \"\";\t\te3.focus();\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\te3.value = domain;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function chkDupID(uid) {\r\n");
      out.write("\tif (uid.length >= 4) {\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"POST\", \t\t\t// 데이터 전송방법\r\n");
      out.write("\t\t\turl : \"/mvcSite/dupID\", // 데이터를 받을 서버의 URL로 컨트롤러\r\n");
      out.write("\t\t\tdata : {\"uid\":uid}, \t// 컨트롤러로 보낼 데이터\r\n");
      out.write("\t\t\tsuccess : function(chkRst) {\r\n");
      out.write("\t\t\t// 데이터를 보내어 실행한 결과를 chkRst로 받아 옴\r\n");
      out.write("\t\t\t\tvar msg = \"\";\r\n");
      out.write("\t\t\t\tif (chkRst == 0) {\t// uid와 동일한 회원정보가 없으면\r\n");
      out.write("\t\t\t\t\tmsg = \"<span class='fontBlue'>사용하실 수 있는 ID입니다.</span>\";\r\n");
      out.write("\t\t\t\t\t$(\"#idChk\").val(\"y\");\r\n");
      out.write("\t\t\t\t} else {\t// uid와 동일한 회원정보가 있으면(중복된 ID이면)\r\n");
      out.write("\t\t\t\t\tmsg = \"<span class='fontRed'>이미 사용중인 ID입니다.</span>\";\r\n");
      out.write("\t\t\t\t\t$(\"#idChk\").val(\"n\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"idMsg\").innerHTML = msg;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h2>회원가입 폼</h2>\r\n");
      out.write("<form name=\"frmJoin\" action=\"proc.mem\" method=\"post\">\r\n");
      out.write("<input type=\"hidden\" name=\"wtype\" value=\"in\" />\r\n");
      out.write("<input type=\"hidden\" name=\"idChk\" id=\"idChk\" value=\"n\" />\r\n");
      out.write("<div id=\"agreement\" style=\"width:700px; height:100px; overflow:auto;\">\r\n");
      out.write("약관 내용<br />약관 내용<br />약관 내용<br />약관 내용<br />약관 내용<br />약관 내용<br />약관 내용<br />\r\n");
      out.write("</div>\r\n");
      out.write("<input type=\"radio\" name=\"agree\" value=\"y\" />동의 함\r\n");
      out.write("<input type=\"radio\" name=\"agree\" value=\"n\" checked=\"checked\" />동의 안함<br /><br />\r\n");
      out.write("<table border=\"1\" cellpadding=\"5\" width=\"700\">\r\n");
      out.write("<tr>\r\n");
      out.write("<th width=\"20%\">아이디</th>\r\n");
      out.write("<td width=\"*\">\r\n");
      out.write("\t<input type=\"text\" name=\"mi_id\" onkeyup=\"chkDupID(this.value);\" />\r\n");
      out.write("\t<span id=\"idMsg\" style=\"font-size:80%\">아이디는 4~20자의 영문 및 숫자 조합으로 입력하세요.</span>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr><th>비밀번호</th><td><input type=\"password\" name=\"mi_pwd\" /></td></tr>\r\n");
      out.write("<tr><th>비밀번호 확인</th><td><input type=\"password\" name=\"mi_pwd2\" /></td></tr>\r\n");
      out.write("<tr><th>이름</th><td><input type=\"text\" name=\"mi_name\" /></td></tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>생년월일</th>\r\n");
      out.write("<td>\r\n");
      out.write("\t<select name=\"by\">\r\n");
 for (int i = 1950 ; i <= year ; i++) { 
      out.write("\r\n");
      out.write("\t\t<option value=\"");
      out.print(i);
      out.write('"');
      out.write(' ');
 if(i == year) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
      out.print(i);
      out.write("</option>\r\n");
 } 
      out.write("\r\n");
      out.write("\t</select>년\r\n");
      out.write("\t<select name=\"bm\">\r\n");
 for (int i = 1 ; i <= 12 ; i++) { 
      out.write("\r\n");
      out.write("\t\t<option value=\"");
      out.print(i);
      out.write('"');
      out.write(' ');
 if(i == month) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
      out.print(i);
      out.write("</option>\r\n");
 } 
      out.write("\r\n");
      out.write("\t</select>월\r\n");
      out.write("\t<select name=\"bd\">\r\n");
 for (int i = 1 ; i <= 31 ; i++) { 
      out.write("\r\n");
      out.write("\t\t<option value=\"");
      out.print(i);
      out.write('"');
      out.write(' ');
 if(i == day) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
      out.print(i);
      out.write("</option>\r\n");
 } 
      out.write("\r\n");
      out.write("\t</select>일\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>성별</th>\r\n");
      out.write("<td>\r\n");
      out.write("\t<input type=\"radio\" name=\"mi_gender\" value=\"m\" />남\r\n");
      out.write("\t<input type=\"radio\" name=\"mi_gender\" value=\"f\" checked=\"checked\" />여\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>전화번호</th>\r\n");
      out.write("<td>\r\n");
      out.write("\t<select name=\"p1\">\r\n");
      out.write("\t\t<option value=\"010\">010</option>\r\n");
      out.write("\t\t<option value=\"011\">011</option>\r\n");
      out.write("\t\t<option value=\"016\">016</option>\r\n");
      out.write("\t\t<option value=\"019\">019</option>\r\n");
      out.write("\t</select> -\r\n");
      out.write("\t<input type=\"text\" name=\"p2\" size=\"4\" maxlength=\"4\" /> -\r\n");
      out.write("\t<input type=\"text\" name=\"p3\" size=\"4\" maxlength=\"4\" />\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>이메일</th>\r\n");
      out.write("<td>\r\n");
      out.write("\t<input type=\"text\" name=\"e1\" /> @\r\n");
      out.write("\t<select name=\"e2\" onchange=\"setDomain(this.value);\">\r\n");
      out.write("\t\t<option value=\"\">도메인 선택</option>\r\n");
 for (int i = 0 ; i < arrDomain.length ; i++) { 
      out.write("\r\n");
      out.write("\t\t<option value=\"");
      out.print(arrDomain[i] );
      out.write('"');
      out.write('>');
      out.print(arrDomain[i] );
      out.write("</option>\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t<option value=\"direct\">직접 입력</option>\r\n");
      out.write("\t</select>\r\n");
      out.write("\t<input type=\"text\" name=\"e3\" />\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>SNS 수신</th>\r\n");
      out.write("<td>\r\n");
      out.write("\t<input type=\"radio\" name=\"mi_issns\" value=\"y\" checked=\"checked\" />수신\r\n");
      out.write("\t<input type=\"radio\" name=\"mi_issns\" value=\"n\" />미수신\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>메일 수신</th>\r\n");
      out.write("<td>\r\n");
      out.write("\t<input type=\"radio\" name=\"mi_ismail\" value=\"y\" checked=\"checked\" />수신\r\n");
      out.write("\t<input type=\"radio\" name=\"mi_ismail\" value=\"n\" />미수신\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<br />\r\n");
      out.write("<table border=\"1\" cellpadding=\"5\" width=\"700\">\r\n");
      out.write("<tr>\r\n");
      out.write("<th width=\"20%\">우편번호</th>\r\n");
      out.write("<td width=\"*\"><input type=\"text\" name=\"ma_zip\" size=\"5\" maxlength=\"5\" /></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>주소</th>\r\n");
      out.write("<td><input type=\"text\" name=\"ma_addr1\" /> <input type=\"text\" name=\"ma_addr2\" /></td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<p style=\"width:700px; text-align:center;\">\r\n");
      out.write("\t<input type=\"submit\" value=\"회원 가입\" />\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t<input type=\"reset\" value=\"다시 입력\" />\r\n");
      out.write("</p>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

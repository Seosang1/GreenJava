package action;

import javax.servlet.http.*;
import java.util.*;
import svc.*;
import vo.*;

public class PdtListAct implements Action  {
	public ActionForward execute(HttpServletRequest request, HttpServletResponse response) throws Exception {
		ArrayList<ProductInfo> pdtList = new ArrayList<ProductInfo>();
		
		request.setCharacterEncoding("utf-8");
		int cpage = 1, psize = 12, bsize = 10, spage, epage, rcnt, pcnt;
		if (request.getParameter("cpage") != null)
			cpage = Integer.parseInt(request.getParameter("cpage"));

		// 검색조건(검색어, 대/소분류, 브랜드, 가격대) 쿼리스트링
		String keyword, bcata, scata, brand, sprice, eprice;
		keyword = request.getParameter("keyword");	// 검색어
		bcata	= request.getParameter("bcata");	// 대분류
		scata	= request.getParameter("scata");	// 소분류
		brand	= request.getParameter("brand");	// 브랜드
		sprice	= request.getParameter("sprice");	// 가격대 중 시작가격
		sprice	= request.getParameter("sprice");	// 가격대 중 종료가격
		String where = "where a.cs_id = c.cs_id and b.cb_id = c.cb_id and " +
				"a.b_id = d.b_id and a.pi_isview = 'y' ";
		if (!isEmpty(keyword))	where += " and pi_name like '%" + keyword + "%' ";
		if (!isEmpty(bcata)) 	where += " and pi_name like '%" + keyword + "%' ";
		
		// 정렬조건(판매량-내, 가격-오내, 등록-내, 상품명-오, 리뷰-내) 쿼리스트링 
		String ord = request.getParameter("ord");
		if (ord == null || ord.equals("")) ord = "idd";	// 등록 역순으로 정렬이 기본값
		
		ActionForward forward = new ActionForward();
		forward.setPath("/product/pdt_list.jsp");
		
		return forward;
	}
	
	private boolean isEmpty(String str) {	// 매개변수에 어떤값이든 들어있는지 여부를 검사하는 메소드
		boolean empty = true;
		if (str != null && !str.equals("")) empty = false;
		return empty;
	}
}
